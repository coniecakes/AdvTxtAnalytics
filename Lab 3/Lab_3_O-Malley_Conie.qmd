---
title: "Lab 3"
author: "Conie O'Malley"
date: "`r Sys.Date()`"
format: 
  pdf: 
    titlepage: true
    toc: true
    toc-depth: 2
    code-block-wrap: true
    number-sections: true
execute:
  echo: true
  freeze: false
  error: false
editor: source
python:
  version: /Users/coniecakes/anaconda3/envs/datascience/bin/python
---

```{r}
packages <- c("rvest", "tm.plugin.mail", "Rcrawler", "RSelenium", "RedditExtractoR", "bskyr", "rtoot")
for (i in packages) {
    renv::install(i)
}
```

# Part 1: Importing Data Using the tm Package

## Deliverable 1: Review File Types

```{r}
tm::getReaders() # obtain available readers from tm package
```

Word: "readDOC"
PDF: "readPDF"
Plaintext: "readPlain"
HTML: "readHTML"
Email: "readMail"

## Deliverable 2: Getting and Setting a Working Directory
```{r}
getwd() # get working directory
```

## Deliverable 3: Importing Tab Delimited Files: Prepare Trump Impeachment Object
```{r}
trump1 <- read.delim("Lab 3/data/impeach.tab", stringsAsFactors = FALSE) # read tab delimited file
str(trump1) # structure of the data frame

trump2 <- read.delim("/Users/coniecakes/Library/CloudStorage/OneDrive-Personal/001. Documents - Main/023. Programming Tools/R Studio/AdvTxtAnalytics/Lab 3/data/impeach.tab", stringsAsFactors = FALSE) # read using absolute path
str(trump2)

trump3 <- readr::read_tsv("Lab 3/data/impeach.tab") # import using read_tsv
str(trump3)

class(trump1)
class(trump2)
class(trump3)
```

### Deliverable 4: Import and Inspect a Folder of .txt files Using TM: IGF Bali Transcripts
```{r}
igfbali <- tm::Corpus(tm::DirSource("Lab 3/data/txt_data"), # read igfbali data into corpus vector
                      readerControl=list(reader=tm::readPlain))
tm::inspect(igfbali[1]) # inspect igfbali
class(igfbali) -> igfbali_class # identify the class of igfbali
```

We use readPlain in order to read the plain text data files from the `txt_data` into a corpus.


`igfbali` is a `r igfbali_class` object.

## Part 2: Regular Expressions (REGEX)

### Deliverable 5: Create Objects Containing a Vector of Characters and Explore using Regex
```{r}
animals <- c("jaguar", "jay", "bat") # create a list vector

stringr::str_detect(animals, "j") # check if any element in the vector contains the character "j"
```


